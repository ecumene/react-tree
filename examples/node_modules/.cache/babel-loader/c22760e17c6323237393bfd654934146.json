{"ast":null,"code":"const flat = (getChildren, callback) => (accumulator, currentValue) => {\n  const children = getChildren(currentValue);\n\n  if (callback && callback(currentValue)) {\n    return children.reduce(flat, accumulator);\n  }\n\n  accumulator.push(children);\n  return accumulator;\n};\n\nexport default ((source, {\n  getChildren = node => node['children'],\n  shouldFlattenCallback\n}) => {\n  const flattened = getChildren(source).reduce(flat(getChildren, shouldFlattenCallback), []);\n  return {\n    flattened\n  };\n});","map":{"version":3,"sources":["/home/mitch/react-tree/src/hooks/useTree.ts"],"names":["flat","getChildren","callback","accumulator","currentValue","children","reduce","push","source","node","shouldFlattenCallback","flattened"],"mappings":"AASA,MAAMA,IAAI,GAAG,CAACC,WAAD,EAAoCC,QAApC,KAA2E,CACtFC,WADsF,EAEtFC,YAFsF,KAGnF;AACH,QAAMC,QAAQ,GAAGJ,WAAW,CAACG,YAAD,CAA5B;;AACA,MAAIF,QAAQ,IAAIA,QAAQ,CAACE,YAAD,CAAxB,EAAwC;AACtC,WAAOC,QAAQ,CAACC,MAAT,CAAgBN,IAAhB,EAAsBG,WAAtB,CAAP;AACD;;AACDA,EAAAA,WAAW,CAACI,IAAZ,CAAiBF,QAAjB;AACA,SAAOF,WAAP;AACD,CAVD;;AAYA,gBAAe,CACbK,MADa,EAEb;AACEP,EAAAA,WAAW,GAAIQ,IAAD,IAAUA,IAAI,CAAC,UAAD,CAD9B;AAEEC,EAAAA;AAFF,CAFa,KAMA;AACb,QAAMC,SAAS,GAAGV,WAAW,CAACO,MAAD,CAAX,CAAoBF,MAApB,CAA2BN,IAAI,CAACC,WAAD,EAAcS,qBAAd,CAA/B,EAAqE,EAArE,CAAlB;AACA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACD,CATD","sourcesContent":["interface TreeConfig {\n  getChildren?: (node: any) => [any];\n  shouldFlattenCallback?: (node: any) => boolean;\n}\n\ninterface TreeArgs {\n  flattened: [any];\n}\n\nconst flat = (getChildren: (node: any) => [any], callback?: (value: any) => boolean) => (\n  accumulator: [any],\n  currentValue: any\n) => {\n  const children = getChildren(currentValue)\n  if (callback && callback(currentValue)) {\n    return children.reduce(flat, accumulator);\n  }\n  accumulator.push(children);\n  return accumulator;\n};\n\nexport default (\n  source: any,\n  {\n    getChildren = (node) => node['children'],\n    shouldFlattenCallback,\n  }: TreeConfig\n): TreeArgs => {\n  const flattened = getChildren(source).reduce(flat(getChildren, shouldFlattenCallback), []);\n  return { flattened };\n};\n"]},"metadata":{},"sourceType":"module"}